name: Generate Reference Docs
on:
  workflow_call:
    inputs:
      commit_resources:
        description: 'commit the resources after generating them. Requires the access_token to be passed'
        required: false
        default: false
        type: boolean
    secrets:
      access_token:
        description: 'the access token to use for commits'
        required: false
  workflow_dispatch:
    branches:
    - main
    - develop
    - "feature-*"
    - "release-*"
    tags:
    - "v*"
    inputs:
      commit_resources:
        description: 'commit the resources after generating them. Requires a PAT defined as secrets.COMMIT_TOKEN'
        required: true
        default: false
        type: boolean
jobs:
  build-and-push-website:
    name: Build and Push Website Reference
    runs-on: ubuntu-20.04
    env:
      JAVA_CLASSPATH: ${{ github.workspace}}/lib
      MAIN_PATH: ${{ github.workspace }}/main
      BRANCH_PATH: ${{ github.workspace }}/branch
      MAIN_BRANCH_REF: main
    steps:
    # This workflow requires two branches to be checked out
    # 1) The main branch where live web assets are managed. Generated reference pages need to be
    #    pushed here.
    # 2) The target branch where the metaschemas exist that are the basis of reference information.
    # Checkout the current branch for reading
    - name: Checkout Latest
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      with:
        path: ${{ env.BRANCH_PATH }}
        submodules: recursive
        fetch-depth: 0 # this ensures that the tag and commit history are available
    # use this for builds triggered from the UI on protected branches
    - name: Checkout Main (using COMMIT_TOKEN)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.commit_resources == 'true'
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      with:
        path: ${{ env.MAIN_PATH }}
        ref: ${{ env.MAIN_BRANCH_REF }}
        token: ${{ secrets.COMMIT_TOKEN }}
        submodules: recursive
      id: checkout_main_workflow
    # use this for builds triggered from other workflows on protected branches
    - name: Checkout Main (using access_token)
      if: github.event_name == 'push' && inputs.commit_resources == true
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      with:
        path: ${{ env.MAIN_PATH }}
        ref: ${{ env.MAIN_BRANCH_REF }}
        token: ${{ secrets.access_token }}
        submodules: recursive
      id: checkout_main_push
    # use this for overything else (i.e., pull requests) where publication is not needed
    - name: Checkout Main
      if: steps.checkout_main_workflow.conclusion == 'skipped' && steps.checkout_main_push.conclusion == 'skipped'
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      with:
        path: ${{ env.MAIN_PATH }}
        ref: ${{ env.MAIN_BRANCH_REF }}
        submodules: recursive
    - name: Set env
      run: |
        echo "SAXON_HOME=${JAVA_CLASSPATH}" >> $GITHUB_ENV
        echo "CALABASH_HOME=${JAVA_CLASSPATH}" >> $GITHUB_ENV
    # Setup runtime environment
    # -------------------------
    # Java JDK 11
    - name: Set up JDK
      uses: actions/setup-java@c3ac5dd0ed8db40fedb61c32fbe677e6b355e94c
      with:
        java-version: 11
        distribution: 'temurin'
        cache: 'maven'
    - name: Install JDK Deps Saxon and XML Calabash
      run: |
        cd "${{ env.BRANCH_PATH }}/build"
        mkdir -p "${JAVA_CLASSPATH}"
        mvn dependency:copy-dependencies -DoutputDirectory="${JAVA_CLASSPATH}"
    # Install Hugo
    - name: Store Hugo Executable in Cache
      uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
      with:
        path: /home/runner/go/bin/hugo
        key: ${{ runner.os }}-hugo-${{ hashFiles(format('{0}/build/go.sum', env.BRANCH_PATH)) }}
      id: cache-hugo
    - name: Add Cached Hugo Executable to PATH
      if: steps.cache-hugo.outputs.cache-hit == 'true'
      run: |
        echo "/home/runner/go/bin" >> $GITHUB_PATH
    - name: Setup Golang
      if: steps.cache-hugo.outputs.cache-hit != 'true'
      uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568
      with:
        go-version-file: '${{ env.BRANCH_PATH }}/build/go.mod'
        cache: true
        cache-dependency-path: '${{ env.BRANCH_PATH }}/build/go.sum'
    - name: Install Hugo
      if: steps.cache-hugo.outputs.cache-hit != 'true'
      run: |
        cd "${{ env.BRANCH_PATH }}/build"
        go install -tags "extended" github.com/gohugoio/hugo
    - name: Setup Swap Space
      # Since Hugo is requiring more memory
      uses: pierotofy/set-swap-space@49819abfb41bd9b44fb781159c033dba90353a7c
      with:
        swap-size-gb: 10
    # Build Artifacts
    # ---------------
    - name: Generate Model Reference Documentation
      # perform this step in the target branch, but generate the results to the main branch
      run: |
        echo "PWD: ${PWD}"
        echo "Github Workspace: ${{ github.workspace }}"
        echo "Current Branch: $(git branch --show-current)"
        echo "GITHUB_REF: ${GITHUB_REF}"

        BRANCH="${GITHUB_REF}"
        if [[ "$BRANCH" =~ ^refs/pull/.* ]]; then
          BRANCH="${GITHUB_HEAD_REF}"
        elif [[ "$BRANCH" =~ ^refs/heads/.* ]]; then
          BRANCH="${GITHUB_REF#refs/heads/}"
        elif [[ "$BRANCH" =~ ^refs/tags/.* ]]; then
          BRANCH="${GITHUB_REF#refs/tags/}"
        fi
        echo "Using Branch: ${BRANCH}"
        bash "${{ env.MAIN_PATH }}/build/ci-cd/generate-model-documentation.sh" -b "${BRANCH}" -a "${BRANCH_PATH}" -w "${MAIN_PATH}" -o "${MAIN_PATH}"
      working-directory: ${{ env.BRANCH_PATH }}
    - name: Run Hugo
      run: |
        hugo --config "config.yaml,development-config.yaml" -v --debug --minify
      working-directory: ${{ env.MAIN_PATH }}/docs
    - name: Zip Artifacts for Upload
      run: |
        zip ${{ runner.temp }}/metaschema-website.zip -r public/
      working-directory: ${{ env.MAIN_PATH }}/docs
    - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb
      with:
        name: website
        path: |
          ${{ runner.temp }}/metaschema-website.zip
        retention-days: 5
    - name: Publish Generated Pages
      # only do this on master
      if: github.event.inputs.commit_resources == 'true' || inputs.commit_resources == true
      uses: stefanzweifel/git-auto-commit-action@3ea6ae190baf489ba007f7c92608f33ce20ef04a
      with:
        repository: ${{ env.MAIN_PATH }}
        file_pattern: docs
        # push_options: --force-with-lease
        skip_dirty_check: false
        commit_user_name: OSCAL GitHub Actions Bot
        commit_user_email: oscal@nist.gov
        commit_author: OSCAL GitHub Actions Bot <oscal@nist.gov>
        commit_message: Pushing generated website pages [ci skip]
